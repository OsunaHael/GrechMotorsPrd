@page "/users"
@using GrechMotorsPrd.Client.Repository
@using GrechMotorsPrd.Shared.Models

@inject IRepository repository
@inject SweetAlertService swal

<div id="loadingScreen" class="loading-screen" style="display:@(isLoading ? "block" : "none")">
    <div class="loading-spinner"></div>
</div>
<div class="container vh-100 d-flex justify-content-center align-items-center">
    <div class="col-lg-8 col-md-10 col-sm-12">
        <div class="bg-white rounded-3 p-4 shadow-lg">
            <h1>Indice de Usuarios</h1>
            <div class="m-3">
                <div class="row mt-3">
                    <div class="col">
                        <div class="table-responsive">
                            <table class="table" style="overflow-x: auto;">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Usuario</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (users != null)
                                    {
                                        @foreach (var user in users)
                                        {
                                            <tr>
                                                <td>
                                                    <a href="/user/edit/@user.id">Editar</a>
                                                </td>
                                                <td>
                                                    @user.email
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    List<UserModel> users;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        await Load();
        isLoading = false;
    }

    private async Task Load()
    {
        var httpResponse = await repository.Get<List<UserModel>>("api/User");
        if (httpResponse.Error)
        {
            var errorMessage = await httpResponse.GetErrorMessage();
            await swal.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
        }
        else
        {
            users = httpResponse.Response;
        }
    }
}