// <auto-generated />
using System;
using GrechMotorsPrd.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrechMotorsPrd.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurnitureModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("end_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("furniture_number")
                        .HasColumnType("int");

                    b.Property<string>("furniture_status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("furnitures");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurniturePieceModel", b =>
                {
                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("piece_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("furniture_id", "piece_id");

                    b.HasIndex("piece_id");

                    b.ToTable("furniturespieces");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurnitureStatusHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("fail")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<string>("furniture_status")
                        .HasColumnType("longtext");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("furniture_id");

                    b.HasIndex("unit_id");

                    b.HasIndex("user_id");

                    b.ToTable("furniturestatushistories");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.PieceModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("end_time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("piece_number")
                        .HasColumnType("int");

                    b.Property<string>("piece_status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("pieces");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.PieceStatusHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("fail")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("piece_id")
                        .HasColumnType("int");

                    b.Property<string>("piece_status")
                        .HasColumnType("longtext");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("furniture_id");

                    b.HasIndex("piece_id");

                    b.HasIndex("unit_id");

                    b.HasIndex("user_id");

                    b.ToTable("piecestatushistories");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitFurnitureCodeModel", b =>
                {
                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("qr_code_number")
                        .HasColumnType("longtext");

                    b.HasKey("unit_id", "furniture_id");

                    b.HasIndex("furniture_id");

                    b.ToTable("unitsfurniturescodes");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitFurnitureModel", b =>
                {
                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("unit_id", "furniture_id");

                    b.HasIndex("furniture_id");

                    b.ToTable("unitsfurnitures");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("color")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("cut_off_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ext")
                        .HasColumnType("int");

                    b.Property<int>("g_number")
                        .HasColumnType("int");

                    b.Property<int>("line")
                        .HasColumnType("int");

                    b.Property<string>("model")
                        .HasColumnType("longtext");

                    b.Property<string>("opt")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id");

                    b.ToTable("units");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitPieceCodeModel", b =>
                {
                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<int>("piece_id")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("qr_code_number")
                        .HasColumnType("longtext");

                    b.HasKey("unit_id", "piece_id");

                    b.HasIndex("piece_id");

                    b.ToTable("unitspiecescodes");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserFurnitureModel", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("furniture_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "furniture_id");

                    b.HasIndex("furniture_id");

                    b.ToTable("usersfurnitures");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("deleted_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<int>("identityUserId")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("pwd")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("user_number")
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("identityUserId")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserPieceModel", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("piece_id")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "piece_id");

                    b.HasIndex("piece_id");

                    b.ToTable("userspieces");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurniturePieceModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("FurniturePieces")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.PieceModel", "Piece")
                        .WithMany("FurniturePieces")
                        .HasForeignKey("piece_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurnitureStatusHistory", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("FurnitureStatusHistories")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UnitModel", "Unit")
                        .WithMany("FurnitureStatusHistories")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UserModel", "User")
                        .WithMany("FurnitureStatusHistories")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.PieceStatusHistory", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("PieceStatusHistories")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.PieceModel", "Piece")
                        .WithMany("PieceStatusHistories")
                        .HasForeignKey("piece_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UnitModel", "Unit")
                        .WithMany("PieceStatusHistories")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UserModel", "User")
                        .WithMany("PieceStatusHistories")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Piece");

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitFurnitureCodeModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("UnitFurnituresCodes")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UnitModel", "Unit")
                        .WithMany("UnitFurnituresCodes")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitFurnitureModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("UnitFurnitures")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UnitModel", "Unit")
                        .WithMany("UnitFurnitures")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.UserModel", "User")
                        .WithMany("Unit")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitPieceCodeModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.PieceModel", "Piece")
                        .WithMany("UnitPiecesCodes")
                        .HasForeignKey("piece_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UnitModel", "Unit")
                        .WithMany("UnitPiecesCodes")
                        .HasForeignKey("unit_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserFurnitureModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.FurnitureModel", "Furniture")
                        .WithMany("UserFurnitures")
                        .HasForeignKey("furniture_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UserModel", "User")
                        .WithMany("UserFurnitures")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserModel", b =>
                {
                    b.HasOne("ApplicationUser", "ApplicationUser")
                        .WithOne("User")
                        .HasForeignKey("GrechMotorsPrd.Shared.Models.UserModel", "identityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserPieceModel", b =>
                {
                    b.HasOne("GrechMotorsPrd.Shared.Models.PieceModel", "Piece")
                        .WithMany("UserPieces")
                        .HasForeignKey("piece_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrechMotorsPrd.Shared.Models.UserModel", "User")
                        .WithMany("UserPieces")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.FurnitureModel", b =>
                {
                    b.Navigation("FurniturePieces");

                    b.Navigation("FurnitureStatusHistories");

                    b.Navigation("PieceStatusHistories");

                    b.Navigation("UnitFurnitures");

                    b.Navigation("UnitFurnituresCodes");

                    b.Navigation("UserFurnitures");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.PieceModel", b =>
                {
                    b.Navigation("FurniturePieces");

                    b.Navigation("PieceStatusHistories");

                    b.Navigation("UnitPiecesCodes");

                    b.Navigation("UserPieces");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UnitModel", b =>
                {
                    b.Navigation("FurnitureStatusHistories");

                    b.Navigation("PieceStatusHistories");

                    b.Navigation("UnitFurnitures");

                    b.Navigation("UnitFurnituresCodes");

                    b.Navigation("UnitPiecesCodes");
                });

            modelBuilder.Entity("GrechMotorsPrd.Shared.Models.UserModel", b =>
                {
                    b.Navigation("FurnitureStatusHistories");

                    b.Navigation("PieceStatusHistories");

                    b.Navigation("Unit");

                    b.Navigation("UserFurnitures");

                    b.Navigation("UserPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
